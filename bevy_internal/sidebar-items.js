initSidebarItems({"mod":[["app","Build bevy apps, create plugins, and read events."],["asset","Load and store assets and resources for Apps."],["core","Contains core plugins."],["core_pipeline","Core render pipeline."],["diagnostic","Useful diagnostic plugins and types for bevy apps."],["ecs","Bevyâ€™s entity-component-system."],["hierarchy","Entity hierarchies and property inheritance"],["input","Resources and events for inputs, e.g. mouse/keyboard, touch, gamepads, etc."],["log","Logging capabilities"],["math","Math types (Vec3, Mat4, Quat, etc) and helpers."],["prelude","`use bevy::prelude::*;` to import common components, bundles, and plugins."],["ptr","Utilities for working with untyped pointers in a more safe way."],["reflect","Type reflection used for dynamically interacting with rust types."],["render","Cameras, meshes, textures, shaders, and pipelines. Use `RenderDevice::features`, `RenderDevice::limits`, and the `WgpuAdapterInfo` resource to get runtime information about the actual adapter, backend, features, and limits."],["tasks","Pools for async, IO, and compute tasks."],["time","Contains time utilities."],["transform","Local and global transforms (e.g. translation, scale, rotation)."],["utils","Various miscellaneous utilities for easing development"],["window","Configuration, creation, and management of one or more windows."]],"struct":[["DefaultPlugins","This plugin group will add all the default plugins:"],["MinimalPlugins","Minimal plugin group that will add the following plugins:"]]});